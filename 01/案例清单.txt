01: HelloWorld，最简单搭建一个服务器
02: 这个案例是个演示，不用研究。
	说明Node.js没有web容器的概念，呈递的静态文件和URL没有任何关系。	
	访问127.0.0.1/fang实际显示的是test文件夹中的xixi.html页面	
	访问127.0.0.1/yuan实际显示的是test文件夹中的haha.html页面	
	相应的图片，都要有自己的路由
03: req对象的end()方法、write()方法、writeHead()方法
04：req.url的演示，能够得到用户的请求的地址
05：url模块很好用，里面有url.parse()方法，能够将url拆分成为很多部分。
06：接收表单GET提交的模拟，可以得到表单提交上来的name、age、sex。表单是test文件夹中的form.html
07：当用户访问/student/1234567890 的查询此学号的学生信息。	
	当用户方位/teacher/645433 的时候，查询此老师的信息	
	其他的，我们提示错误。
	如果位数不对，也是提示位数不对
08:这个案例，给每一个访问者加一个id，这样可以探究node事件环机制。
09: fs模块的mkdir函数，创建文件夹
10: fs模块的stat函数，检测文件状态。回调函数中的stats有isDirectory()方法，可以判断文件夹。
11: 失败案例。列出album文件夹中的所有子文件夹
12: 正确的读取所有文件夹的案例。强行把异步变成同步。
13：一个比较完整的静态资源案例。